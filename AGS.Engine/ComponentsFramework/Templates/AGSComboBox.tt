<#@ output extension=".generated.cs" #>
<#@ assembly name="$(SolutionDir)/AGS.API/bin/Debug/AGS.API.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="AGS.API" #>
<#@ include file="EntityCreatorTemplate.tt" #>

<#
		EntityCreator template = new ComboBoxTemplate();
		template.NamespaceName = "AGS.Engine";
		template.ClassName = "AGSComboBox";
		template.AdditionalInterfaces = "IComboBox";
		template.ComponentType = typeof(IComponent);
		template.Components = new List<Type> { typeof(IComboBox) };
		string output = template.TransformText();
		if (output != null)
		{
    		Write(output);
		}
#>

<#+
	class ComboBoxTemplate : EntityCreator
	{
		protected override void WriteAdditionalUsings()
    	{
    		base.WriteAdditionalUsings();
    		WriteLine("using System.Threading.Tasks;");
    		Write("using System.Collections.Generic;");
    	}

    	protected override bool ProcessInterface(Type interfaceType)
    	{
			if (interfaceType == typeof(IComboBoxComponent)) return true;
    		if (interfaceType == typeof(IComboBox) || interfaceType == typeof(ILabel) || interfaceType == typeof(IPanel) 
    			|| interfaceType == typeof(IObject)) return false;
    		if (interfaceType.Name.Contains("IUIControl") || interfaceType.Name.Contains("ILabel")
			|| interfaceType.Name.Contains("IComboBox")) return false;
    		return base.ProcessInterface(interfaceType);
    	}

    	protected override bool WriteImplements(Type interfaceType)
    	{
    		return false;
    	}    	
	}
#>